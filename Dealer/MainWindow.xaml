<Window x:Name="dealerWindow" x:Class="Dealer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Dealer"
        mc:Ignorable="d" 
        Width="1030" 
        Height="800" 
        WindowStartupLocation="CenterScreen" 
        Background="#FFF3F3F3" 
        Closing="Window_Closing">
    <Window.Resources>
        <SolidColorBrush x:Key="Labels_Brush" Color="#FFC7C7C7"/>
        <SolidColorBrush x:Key="Background_Gray" Color="#FF3F3F46"/>
        <ControlTemplate x:Key="MenuItemControl_File_Template" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource Background_Gray}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControl_File" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="MenuItemControlTemplate1" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="{StaticResource Background_Gray}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{StaticResource Background_Gray}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="#FFD7D7D7" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
        <Style x:Key="GroupBoxStyle1" TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="#D5DFE5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="6"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="6"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                            <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3">
                                <Border.OpacityMask>
                                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                        <Binding ElementName="Header" Path="ActualWidth"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Border.OpacityMask>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3">
                                    <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"/>
                                </Border>
                            </Border>
                            <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <!--HOTKEYS-->
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.New"
                        Executed="HideColumns"/>
        <CommandBinding Command="ApplicationCommands.Save"
                        Executed="Save_Click"/>
        <CommandBinding Command="ApplicationCommands.SaveAs"
                        Executed="SaveAs_Click"/>
        <CommandBinding Command="ApplicationCommands.Open"
                        Executed="Open_Click"/>
        <CommandBinding Command="ApplicationCommands.Print"
                        Executed="CallCalc"/>
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Command="ApplicationCommands.New"
                    Gesture="Ctrl+W"/>
        <KeyBinding Command="ApplicationCommands.Save"
                    Gesture="Ctrl+S"/>
        <KeyBinding Command="ApplicationCommands.SaveAs"
                    Gesture="Ctrl+Shift+S"/>
        <KeyBinding Command="ApplicationCommands.Open"
                    Gesture="Ctrl+O"/>
        <KeyBinding Command="ApplicationCommands.Print"
                    Gesture="Ctrl+Shift+C"/>
    </Window.InputBindings>


    <!--MAIN GRID-->
    <Grid Name="MainGrid" ShowGridLines="False" Background="#FF252526">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="600*"></ColumnDefinition>
            <ColumnDefinition Width="445*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition MinHeight="300" Height="300*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="160*" MaxHeight="160" Name="Row4"></RowDefinition>
            <RowDefinition Height="201*"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Menu-->
        <Menu x:Name="menu" 
              Grid.Row="0"
              Grid.Column="0"
              Grid.ColumnSpan="2"
              Height="22" 
              VerticalAlignment="Top" 
              Background="{DynamicResource Background_Gray}" 
              Style="{DynamicResource MenuStyle1}">
            <MenuItem Header="Файл" 
                      Background="{DynamicResource Background_Gray}" 
                      Foreground="{DynamicResource Labels_Brush}" 
                      Template="{DynamicResource MenuItemControlTemplate1}">
                <MenuItem x:Name="NewDocument" Header="Новый документ" Click="NewDocument_Click"/>
                <MenuItem x:Name="Open" Header="Открыть" Click="Open_Click"/>
                <MenuItem x:Name="Save" Header="Сохранить" Click="Save_Click"/>
                <MenuItem x:Name="SaveAs" Header="Сохранить как..." Click="SaveAs_Click"/>
                <Separator></Separator>
                <MenuItem x:Name="Exit" Header="Выход" Click="Exit_Click"/>
            </MenuItem>
            <MenuItem Header="Правка" 
                      Foreground="{DynamicResource Labels_Brush}" 
                      Background="{DynamicResource Background_Gray}" 
                      Template="{DynamicResource MenuItemControlTemplate1}">
                <MenuItem x:Name="AddProduct" Header="Добавить товар" Click="AddProduct_Click"/>
                <MenuItem x:Name="RemoveProduct" Header="Удалить товар" Click="RemoveProduct_Click"/>
                <Separator></Separator>
                <MenuItem x:Name="AddClient" Header="Добавить клиента" Click="AddClient_Click"/>
                <MenuItem x:Name="EditClient" Header="Редактировать клиента" Click="EditClient_Click"/>
                <MenuItem x:Name="RemoveClient" Header="Удалить клиента" Click="RemoveClient_Click"/>
            </MenuItem>
            <MenuItem Header="Справка" 
                      Foreground="{DynamicResource Labels_Brush}" 
                      Template="{DynamicResource MenuItemControlTemplate1}">
                <MenuItem x:Name="About" Header="О программе" Click="About_Click"/>
            </MenuItem>
            <MenuItem Header="Калькулятор"
                      
                      Foreground="{DynamicResource Labels_Brush}" 
                      Template="{DynamicResource MenuItemControlTemplate1}"
                      Click="CallCalc">
            </MenuItem>
        </Menu>

        <!--Products Grid-->
        <DataGrid x:Name="productsGrid" 
                  Grid.Row="1"
                  Grid.Column="1"
                   Margin="5"
                  VerticalAlignment="Stretch" 
                  CanUserResizeRows="False" 
                  ClipboardCopyMode="None" 
                  GridLinesVisibility="Horizontal" 
                  IsHitTestVisible="True" 
                  AutoGenerateColumns="False" 
                  SelectionMode="Single" 
                  CanUserReorderColumns="False" 
                  Foreground="Black" 
                  Grid.IsSharedSizeScope="True" 
                  ScrollViewer.CanContentScroll="True" 
                  ColumnHeaderHeight="40" 
                  HeadersVisibility="Column" 
                  Background="{DynamicResource Background_Gray}" 
                  BorderBrush="#FF3F3F46">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#FF1E1E21" />
                    <Setter Property="Foreground" Value="White" />
                </Style>
            </DataGrid.Resources>

            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ItemBindingGroup>
                <BindingGroup/>
            </DataGrid.ItemBindingGroup>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" Header="Товар" IsReadOnly="True" MinWidth="130" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding Quantity}" ClipboardContentBinding="{x:Null}" Header="Кол-во" IsReadOnly="True" MinWidth="50" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding CostPrice}" ClipboardContentBinding="{x:Null}" Header="Себест." IsReadOnly="True" MinWidth="65" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding InStock}" ClipboardContentBinding="{x:Null}" Header="В наличии" IsReadOnly="True" MinWidth="70"  Width="Auto"/>
                <DataGridTextColumn Binding="{Binding CostPriceTotal}" ClipboardContentBinding="{x:Null}" Header="Себест.&#xA;общая" IsReadOnly="True" MinWidth="82" Width="Auto"/>
            </DataGrid.Columns>
        </DataGrid>

        <!--Clients Grid-->
        <DataGrid x:Name="clientsGrid"  
                  Grid.Column="0"
                  Grid.Row="1"
                  Grid.RowSpan="4"
                  Margin="5"
                  VerticalAlignment="Stretch"  
                  SnapsToDevicePixels="True" 
                  GridLinesVisibility="Horizontal" 
                  SelectionMode="Single" 
                  HeadersVisibility="Column" 
                  ColumnWidth="SizeToHeader" 
                  IsReadOnly="True" 
                  ColumnHeaderHeight="40" 
                  AutoGenerateColumns="False" 
                  BorderBrush="#FF3F3F46" 
                  Background="{DynamicResource Background_Gray}">
            <DataGrid.Resources>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#FF1E1E21" />
                    <Setter Property="Foreground" Value="White" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="BorderThickness" Value="0"/>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Name}" ClipboardContentBinding="{x:Null}" Header="Имя" IsReadOnly="True" Width="Auto" MinWidth="90"/>
                <DataGridTextColumn Binding="{Binding Product}" ClipboardContentBinding="{x:Null}" Header="Товар" IsReadOnly="True" MinWidth="100" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding Quantity}" ClipboardContentBinding="{x:Null}" Header="Кол-во" IsReadOnly="True" MinWidth="55" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding Price}" ClipboardContentBinding="{x:Null}" Header="Цена&#xA;за ед." IsReadOnly="True" MinWidth="55" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding TotalPrice}" ClipboardContentBinding="{x:Null}" Header="Цена&#xA;общая" MinWidth="55" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding CostPrice}" ClipboardContentBinding="{x:Null}" Header="Возврат" IsReadOnly="True" MinWidth="55" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding Profit}" ClipboardContentBinding="{x:Null}" Header="Разница" IsReadOnly="True" MinWidth="55" Width="Auto"/>
                <DataGridTextColumn Binding="{Binding Note}" ClipboardContentBinding="{x:Null}" Header="Статус" IsReadOnly="True" MinWidth="100" Width="Auto"/>
            </DataGrid.Columns>
        </DataGrid>

        <WrapPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" Background="#FF252526" HorizontalAlignment="Left" Width="430">
            <Image x:Name="Client_Add_IButton" 
                   Grid.Column="0"
                   Margin="5"
                   Height="76" 
                   Width="76" 
                   Source="Resources/Client_Add_u.jpg" 
                   MouseUp="Client_Add_IButton_MouseUp"/>
            <Image x:Name="Client_Edit_IButton" 
                   Grid.Column="1"
                   Margin="5"
                   Height="76" 
                   Width="76" 
                   Source="Resources/Client_Edit_u.jpg" 
                   MouseUp="image_MouseUp"/>
            <Image x:Name="Client_Remove_IButton" 
                   Grid.Column="2"
                   Margin="5"
                   Height="76"
                   Width="76" 
                   Source="Resources/Client_Remove_u.jpg" 
                   MouseUp="Client_Remove_IButton_MouseUp"/>
            <Image x:Name="Product_Add_IButton"
                   Grid.Column="3"
                   Margin="5"
                   Height="76"
                   Width="76" 
                   Source="Resources/Product_Add_u.jpg" 
                   MouseUp="Product_Add_IButton_MouseUp"/>
            <Image x:Name="Product_Remove_IButton"
                   Grid.Column="4"
                   Margin="5"
                   Height="76"
                   Width="76" 
                   Source="Resources/Product_Remove_u.jpg" 
                   MouseUp="Product_Remove_IButton_MouseUp"/>
        </WrapPanel>
        <!--</Grid>-->

        <!--Payments & Info-->
        <Grid Grid.Row="3" Grid.Column="1" Background="#FF252526">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <!--Payments-->
            <GroupBox x:Name="PaymentsGroupBox" 
                      Grid.Column="0"
                      Margin="3"
                      Header="Платежи"
                      Foreground="{DynamicResource Labels_Brush}" 
                      BorderBrush="{x:Null}" 
                      Style="{DynamicResource GroupBoxStyle1}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="80"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="25"></RowDefinition>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="paymentsListBox" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="5" Background="{DynamicResource Background_Gray}"/>
                    <Button x:Name="paymentAddButton" Grid.Column="1" Grid.Row="0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Top" Content="+" Width="25" Height="25" Click="paymentAddButton_Click" Background="{DynamicResource Background_Gray}" Foreground="{DynamicResource Labels_Brush}"/>
                    <Button x:Name="paymentRemmoveButton" Content="-" Grid.Row="1" Margin="5" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="25" Height="24" Click="paymentRemmoveButton_Click" Background="{DynamicResource Background_Gray}" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="paymentsRestLabel" Grid.Column="0" Grid.Row="2" Margin="0" Content="Остаток:" HorizontalAlignment="Left" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="paymentsRestValueLabel" Grid.Column="1" Grid.Row="2" Margin="0" Content="0.00" HorizontalAlignment="Left" Foreground="{DynamicResource Labels_Brush}"/>

                </Grid>
            </GroupBox>

            <!--Info-->
            <GroupBox x:Name="InfoGroupBox" 
                      Grid.Column="1"
                      Margin="3"
                      Header="Информация" 
                      Foreground="{DynamicResource Labels_Brush}" 
                      BorderBrush="{x:Null}" 
                      BorderThickness="1" 
                      Style="{DynamicResource GroupBoxStyle1}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Label x:Name="ProductsTotalLabel" Grid.Column="0" Grid.Row="0" Content="Товаров всего:" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="CostPriceTotal" Grid.Column="0" Grid.Row="1" Content="На сумму:" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="SoldTotal" Grid.Column="0" Grid.Row="2" Content="Продано всего:" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="ProfitTotal" Grid.Column="0" Grid.Row="3" Content="Прибыль:" Foreground="{DynamicResource Labels_Brush}"/>

                    <Label x:Name="productsTotalQuantityLabel" Grid.Column="1" Grid.Row="0" Content="0.00" HorizontalAlignment="Right" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="productsTotalCostPriceLabel" Grid.Column="1" Grid.Row="1" Content="0.00" HorizontalAlignment="Right" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="productsSoldTotal" Grid.Column="1" Grid.Row="2" Content="0.00" HorizontalAlignment="Right" Foreground="{DynamicResource Labels_Brush}"/>
                    <Label x:Name="productsProfitTotal" Grid.Column="1" Grid.Row="3" Content="0.00" HorizontalAlignment="Right" Foreground="{DynamicResource Labels_Brush}"/>
                </Grid>
            </GroupBox>
        </Grid>

        <!--Notes-->
        <TextBox x:Name="NotesTextBox" 
                 Grid.Column="1"
                 Grid.Row="4"
                 Margin="5"
                 SelectionBrush="Black" 
                 Background="{DynamicResource Background_Gray}" 
                 Foreground="{DynamicResource Labels_Brush}" 
                 AcceptsReturn="True"
                 AcceptsTab="True" 
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"
                 TextChanged="NotesTextBox_TextChanged"/>
    </Grid>

</Window>
